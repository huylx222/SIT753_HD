apiVersion: batch/v1
kind: CronJob
metadata:
  name: app-health-check
  namespace: default
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: health-check-sa
          containers:
          - name: health-check
            image: bitnami/kubectl:latest
            command:
            - /bin/bash
            - -c
            - |
              # Get web service endpoint
              WEB_SERVICE=$(kubectl get service web-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
              if [ -z "$WEB_SERVICE" ]; then
                echo "ERROR: Failed to get web service IP"
                exit 1
              fi
              
              echo "Web service endpoint: $WEB_SERVICE"
              
              # Check web service health (adjust the endpoint to match your application's health check)
              if ! curl -s -f --connect-timeout 10 http://$WEB_SERVICE/; then
                echo "Web service health check failed"
                exit 1
              fi
              
              # Check API service health via web service
              if ! curl -s -f --connect-timeout 10 http://$WEB_SERVICE/test-api; then
                echo "API service health check via web service failed"
                exit 1
              fi
              
              echo "All health checks passed successfully"
          restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: health-check-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: service-reader
  namespace: default
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: health-check-service-reader
  namespace: default
subjects:
- kind: ServiceAccount
  name: health-check-sa
  namespace: default
roleRef:
  kind: Role
  name: service-reader
  apiGroup: rbac.authorization.k8s.io